# 문제
# 이 문제는 아주 평범한 배낭에 관한 문제이다.

# 한 달 후면 국가의 부름을 받게 되는 준서는 여행을 가려고 한다.
# 세상과의 단절을 슬퍼하며 최대한 즐기기 위한 여행이기 때문에,
# 가지고 다닐 배낭 또한 최대한 가치 있게 싸려고 한다.

# 준서가 여행에 필요하다고 생각하는 N개의 물건이 있다.
# 각 물건은 무게 W와 가치 V를 가지는데, 해당 물건을 배낭에 넣어서 가면 준서가 V만큼 즐길 수 있다.
# 아직 행군을 해본 적이 없는 준서는 최대 K만큼의 무게만을 넣을 수 있는 배낭만 들고 다닐 수 있다.
# 준서가 최대한 즐거운 여행을 하기 위해 배낭에 넣을 수 있는 물건들의 가치의 최댓값을 알려주자.

# 입력

# 첫 줄에 물품의 수 N(1 ≤ N ≤ 100)과 준서가 버틸 수 있는 무게 K(1 ≤ K ≤ 100,000)가 주어진다.
# 두 번째 줄부터 N개의 줄에 거쳐 각 물건의 무게 W(1 ≤ W ≤ 100,000)와 해당 물건의 가치 V(0 ≤ V ≤ 1,000)가 주어진다.

# 입력으로 주어지는 모든 수는 정수이다.


case, maxWeight = map(int, input().split())
article = [[0, 0]]
bag = [[0]*(maxWeight+1) for _ in range(case+1)]

for _ in range(case):
    article.append(list(map(int, input().split())))

for i in range(1, case+1):  # 물건의 개수가 i 인 bag
    for j in range(1, maxWeight+1):  # 넣을 수 있는 최대 무게가 j인 bag
        weight = article[i][0]
        value = article[i][1]
        # 26번째 줄에서 입력받은 값

        if j < weight:
            bag[i][j] = bag[i-1][j]
            # 물건의 무게가 가방의 허용치를 넘는 경우 새로운 물건을 담지 않는다
            # 즉 물건의 개수가 i-1인 가방의 가치를 그대로 가지고 온다
        else:
            bag[i][j] = max(bag[i-1][j-weight]+value, bag[i-1][j])
            # 물건의 무게가 가방의 허용치를 넘지 않는 경우
            # 담을 수 있는 최대 무게가 같은 두 가방을 비교한다
            # 물건의 개수가 i-1인 가방에서 새로 넣을 물건의 무게를 빼면 과거에 저장되었던 value 값을 가져올 수 있고
            # 여기에 새로운 물건의 가치를 추가해 bag[i][j]에 대입하면 새로운 value 값을 받을 수 있다
            # 단 이렇게 얻은 값보다 물건을 i-1개 넣었을 때 담긴 물건의 무게가 j인 경우의 value 값이 더 높을 수도 있는 상황을 고려하여
            # 두 값을 비교하여 더 큰 값을 bag[i][j]에 저장한다

print(bag[case][maxWeight])
